//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assessment.Security
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FleetConnectEntities : DbContext
    {
        public FleetConnectEntities()
            : base("name=FleetConnectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SECURITY_Permission> SECURITY_Permission { get; set; }
        public virtual DbSet<SECURITY_Role> SECURITY_Role { get; set; }
        public virtual DbSet<SECURITY_RolePermission> SECURITY_RolePermission { get; set; }
        public virtual DbSet<SECURITY_User> SECURITY_User { get; set; }
        public virtual DbSet<SECURITY_UserRole> SECURITY_UserRole { get; set; }
    
        public virtual ObjectResult<SECURITY_GetPermissionsByRoleID_Result> SECURITY_GetPermissionsByRoleID(Nullable<int> roleID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SECURITY_GetPermissionsByRoleID_Result>("SECURITY_GetPermissionsByRoleID", roleIDParameter);
        }
    
        public virtual ObjectResult<SECURITY_GetRolePermissionsForTreeview_Result> SECURITY_GetRolePermissionsForTreeview(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SECURITY_GetRolePermissionsForTreeview_Result>("SECURITY_GetRolePermissionsForTreeview", roleIdParameter);
        }
    
        public virtual ObjectResult<SECURITY_GetRolesForTreeview_Result> SECURITY_GetRolesForTreeview(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SECURITY_GetRolesForTreeview_Result>("SECURITY_GetRolesForTreeview", userIdParameter);
        }
    
        public virtual ObjectResult<SECURITY_GetUserPermissions_Result> SECURITY_GetUserPermissions(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SECURITY_GetUserPermissions_Result>("SECURITY_GetUserPermissions", userIDParameter);
        }
    }
}
